<?php

/**
 * @file
 * DRealty Module.
 */

use Drupal\drealty\DrealtyListingInterface;
use Drupal\drealty\DrealtyListingTypeInterface;

/**
 * Implements hook_permission().
 */
function drealty_permission() {
  $perms = array(
    'administer drealty listings' => array(
      'title' => t('Administer DRealty Listings'),
    ),
  );

  return $perms;
}

/**
 * Implements hook_form_FORM_ID_alter().
 *
 * Alters the theme form to use the admin theme on drealty listing editing.
 *
 * @see drealty_form_system_themes_admin_form_submit()
 */
function drealty_form_system_themes_admin_form_alter(&$form, &$form_state, $form_id) {
  $form['admin_theme']['drealty_use_admin_theme'] = array(
    '#type' => 'checkbox',
    '#title' => t('Use the administration theme when editing or creating drealty listings'),
    '#default_value' => \Drupal::config('drealty.settings')->get('use_admin_theme'),
  );
  $form['#submit'][] = 'drealty_form_system_themes_admin_form_submit';
}

/**
 * Form submission handler for system_themes_admin_form().
 *
 * @see drealty_form_system_themes_admin_form_alter()
 */
function drealty_form_system_themes_admin_form_submit($form, &$form_state) {
  \Drupal::config('drealty.settings')
    ->set('use_admin_theme', $form_state['values']['drealty_use_admin_theme'])
    ->save();
  \Drupal::service('router.builder')->setRebuildNeeded();
}

/**
 * Returns the drealty listing type label for the passed drealty listing.
 *
 * @param \Drupal\drealty\DrealtyListingInterface $drealty_listing
 *   A drealty listing entity to return the drealty listing type's label for.
 *
 * @return string|false
 *   The drealty listing type label or FALSE if the drealty listing type is not
 *   found.
 *
 * @todo Add this as generic helper method for config entities representing
 *   entity bundles.
 */
function drealty_get_type_label(DrealtyListingInterface $drealty_listing) {
  $type = entity_load('drealty_listing_type', $drealty_listing->bundle());
  return $type ? $type->label() : FALSE;
}
